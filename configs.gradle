/*
 * Copyright 2019 JUN MAO
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * version for dependencies
 **/
ext {
    androidGradlePluginVersion = '4.0.0-alpha03'
    kotlinVersion = '1.3.50'
    compileAndroidSdkVersion = 29
    androidBuildToolsVerison = '29.0.2'
    minAndroidSdkVersion = 21
    targetAndroidSdkVersion = 29

    commonVersionName = '1.0.00'
    commonVersionCode = 1000

    lifecycleVersion = '2.1.0'
    appCompatVersion = '1.1.0'
    supportVersion = '1.0.0'
    swiperefreshlayoutVersion = '1.1.0-alpha03'
    materialVersion = '1.2.0-alpha02'
    constraintLayoutVersion = '1.1.3'
    navigationVersion = '2.2.0-alpha01'
    viewPagerVersion = '1.0.0-beta02'

    //image
    glideVersion = '4.10.0'
    //network
    retrofitVersion = '2.6.2'
    okhttpLoggingInterceptorVersion = '4.2.0'
    //rx
    rxJavaVersion = '2.2.11'
    rxAndroidVersion = '2.1.1'
    //di
    daggerVersion = '2.22.1'
    //sqlite
    roomVersion = '2.2.1'
    //animation
    lottieVersion = '3.0.1'
    //map
    mapVersion = '4.6.0'
    //time
    jodaVersion = '2.10.3'
    // leakcanary
    leakcanaryVersion = '2.0-alpha-2'

    //log
    timberVersion = '4.7.1'

    //test
    junitVersion = '4.12'
    mockitoCoreVersion = '2.25.0'
    mockitoAllVersion = "1.10.19"
    mockitoAndroidVersion = "2.25.0"
    mockwebserverVersion = '4.2.2'
    runnerVersion = '1.2.0'
    espressoCoreVersion = '3.2.0'
    testCoreVersion = '1.2.0'
    extJunitVersion = '1.1.1'
    rulesVersion = '1.2.0'
    archCoreVersion = '2.1.0'
}

/**
 * Shared file between builds so that they can all use the same dependencies.
 **/
ext.deps = [:]

def deps = [:]

deps.android_gradle_plugin = "com.android.tools.build:gradle:$androidGradlePluginVersion"

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
kotlin.gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"

deps.kotlin = kotlin

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$lifecycleVersion"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
deps.lifecycle = lifecycle

def support = [:]
support.app_compat = "androidx.appcompat:appcompat:$appCompatVersion"
support.recycler_view = "androidx.recyclerview:recyclerview:$supportVersion"
support.card_view = "androidx.cardview:cardview:$supportVersion"
support.design = "com.google.android.material:material:$materialVersion"

deps.support = support

deps.view_pager = "androidx.viewpager2:viewpager2:$viewPagerVersion"

deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
deps.swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayoutVersion"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$daggerVersion"
dagger.android = "com.google.dagger:dagger-android:$daggerVersion"
dagger.android_support = "com.google.dagger:dagger-android-support:$daggerVersion"
dagger.compiler = "com.google.dagger:dagger-compiler:$daggerVersion"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$daggerVersion"
deps.dagger = dagger

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$glideVersion"
glide.compiler = "com.github.bumptech.glide:compiler:$glideVersion"
deps.glide = glide

def rx = [:]
rx.java = "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
rx.android = "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
deps.rx = rx

def navigation = [:]
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$navigationVersion"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"
deps.navigation = navigation

def room = [:]
room.runtime = "androidx.room:room-runtime:$roomVersion"
room.compiler = "androidx.room:room-compiler:$roomVersion"
room.rxjava2 = "androidx.room:room-rxjava2:$roomVersion"
room.testing = "androidx.room:room-testing:$roomVersion"
deps.room = room

def network = [:]
network.retrofit = "com.squareup.retrofit2:retrofit:$retrofitVersion"
network.gson = "com.squareup.retrofit2:converter-gson:$retrofitVersion"
network.rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
network.mock = "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"
network.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"
deps.network = network

deps.lottie = "com.airbnb.android:lottie:$lottieVersion"
deps.map = "com.amap.api:location:$mapVersion"
deps.joda = "joda-time:joda-time:$jodaVersion"
deps.leakcanary = "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion"
deps.timber = "com.jakewharton.timber:timber:$timberVersion"

def test = [:]
test.junit = "junit:junit:$junitVersion"
test.mockito_core = "org.mockito:mockito-core:$mockitoCoreVersion"
test.mockito_all = "org.mockito:mockito-all:$mockitoAllVersion"
test.mock_web_server = "com.squareup.okhttp3:mockwebserver:$mockwebserverVersion"
test.arch_core = "androidx.arch.core:core-testing:$archCoreVersion"

deps.test = test

def android_test = [:]
android_test.mockito_android = "org.mockito:mockito-android:$mockitoAndroidVersion"
android_test.runner = "androidx.test:runner:$runnerVersion"
android_test.espresso_core = "androidx.test.espresso:espresso-core:$espressoCoreVersion"
android_test.espresso_contrib = "androidx.test.espresso:espresso-contrib:$espressoCoreVersion"
android_test.espresso_intents = "androidx.test.espresso:espresso-intents:$espressoCoreVersion"
android_test.core = "androidx.test:core:$testCoreVersion"
android_test.ext_junit = "androidx.test.ext:junit:$extJunitVersion"
android_test.rules = "androidx.test:rules:$rulesVersion"
deps.android_test = android_test

ext.deps = deps